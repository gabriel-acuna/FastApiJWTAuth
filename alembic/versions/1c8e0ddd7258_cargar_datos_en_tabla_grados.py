"""cargar datos en tabla grados

Revision ID: 1c8e0ddd7258
Revises: c14126191d04
Create Date: 2021-10-20 09:18:08.268767

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from app.models.core.modelos_principales import Grado
from typing import List
from sqlalchemy.orm.session import Session
from sqlalchemy.sql.expression import select

# revision identifiers, used by Alembic.
revision = '1c8e0ddd7258'
down_revision = 'c14126191d04'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('grados',
                    sa.Column('id', postgresql.UUID(), server_default=sa.text(
                        'uuid_generate_v4()'), nullable=False),
                    sa.Column('grado', sa.String(length=80), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_grados_id'), 'grados', ['id'], unique=False)

    lista: List[Grado] = []

    grados = [
        'DOCTOR (Ph.D)',
        'MAESTR√çA O EQUIVALENTE',
        'DIPLOMA SUPERIOR'
        'DOCTOR EN FILOSOFIA O JURISPRUDENCIA',
        'ESPECIALISTA',
        'ESPECIALISTA AREA SALUD'
    ]

    session = Session(bind=op.get_bind())
    for grado in grados:
        results = session.execute(
            select(Grado).where(Grado.grado == grado)
        )
        existe = results.all()
        if existe:
            break
        lista.append(Grado(grado=grado))
    session.add_all(lista)
    session.commit()
    session.close()
    op.drop_index('ix_Grados_id', table_name='Grados')
    op.drop_table('Grados')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Grados',
                    sa.Column('id', postgresql.UUID(), server_default=sa.text(
                        'uuid_generate_v4()'), autoincrement=False, nullable=False),
                    sa.Column('grado', sa.VARCHAR(length=80),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='Grados_pkey')
                    )
    op.create_index('ix_Grados_id', 'Grados', ['id'], unique=False)
    op.drop_index(op.f('ix_grados_id'), table_name='grados')
    op.drop_table('grados')
    # ### end Alembic commands ###
