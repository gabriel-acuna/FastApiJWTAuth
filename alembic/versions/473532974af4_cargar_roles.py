"""cargar roles

Revision ID: 473532974af4
Revises: f4229626f4f2
Create Date: 2022-03-16 18:44:10.126333

"""
from operator import and_
from random import seed
from alembic import op
import sqlalchemy as sa
from typing import List
from app.models.auth.cuentas_usuarios import rol_usuario, Rol, CuentaUsuario
from sqlalchemy.sql.expression import delete, select
from sqlalchemy.orm.session import Session
from decouple import config

# revision identifiers, used by Alembic.
revision = '473532974af4'
down_revision = 'f4229626f4f2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    roles: List[str] = ['Talento Humano', 'Aseguramiento de la Calidad']
    session = Session(bind=op.get_bind())
    lista: List[Rol] = []
    for rol in roles:
        results = session.execute(
            select(Rol).where(Rol.rol == rol)
        )
        existe = results.all()
        if existe:
            break
        lista.append(Rol(rol=rol, descripcion=''))
    results1 = session.execute(
        select(CuentaUsuario).where(
            CuentaUsuario.email == config("ADMIN_EMAIL"))
    )
    usr_admin = results1.first()
    session.add_all(lista)
    session.commit()
    for rol in lista:
        session.execute(
            f'''insert into roles_usuarios values('{rol.id}', '{usr_admin[0].id}')'''
        )

    session.close()

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())
    results = session.execute(select(Rol).where(Rol.rol != 'Administrador'))
    roles = results.all()
    for rol in roles:
        session.execute(f'''DELETE FROM roles_usuarios WHERE rol_id = '{rol[0].id}' ''')
        session.execute(delete(Rol).where(Rol.rol==rol[0].rol))
        session.commit()
    session.close()
    # ### end Alembic commands ###
