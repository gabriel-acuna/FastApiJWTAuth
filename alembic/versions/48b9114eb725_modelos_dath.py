"""modelos dath

Revision ID: 48b9114eb725
Revises: b5e2f22ef278
Create Date: 2021-09-08 16:51:13.542844

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '48b9114eb725'
down_revision = 'b5e2f22ef278'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('estados_civiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estado_civil', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tipos_escalafones_nombramientos',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('escalafon_nombramiento', sa.String(length=50), nullable=False),
    sa.Column('registrado_en', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('actualizado_en', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('escalafon_nombramiento')
    )
    op.create_index(op.f('ix_tipos_escalafones_nombramientos_id'), 'tipos_escalafones_nombramientos', ['id'], unique=False)
    op.create_table('datos_personales',
    sa.Column('tipo_identificacion', sa.Enum('CEDULA', 'PASAPORTE', name='tipoidentificacion'), nullable=False),
    sa.Column('identificacion', sa.String(length=10), nullable=False),
    sa.Column('primer_nombre', sa.String(length=30), nullable=False),
    sa.Column('segundo_nombre', sa.String(length=30), nullable=False),
    sa.Column('primer_apellido', sa.String(length=30), nullable=False),
    sa.Column('segundo_apellido', sa.String(length=30), nullable=False),
    sa.Column('sexo', sa.Enum('HOMBRE', 'MUJER', name='sexo'), nullable=False),
    sa.Column('fecha_nacimiento', sa.Date(), nullable=False),
    sa.Column('id_pais_origen', sa.Integer(), nullable=True),
    sa.Column('id_estado_civil', sa.Integer(), nullable=True),
    sa.Column('id_discapacidad', postgresql.UUID(), nullable=False),
    sa.Column('carnet_conadis', sa.String(length=13), nullable=False),
    sa.Column('porcentaje_discapacidad', sa.Integer(), nullable=True),
    sa.Column('id_etnia', postgresql.UUID(), nullable=True),
    sa.Column('id_nacionalidad', postgresql.UUID(), nullable=False),
    sa.Column('correo_institucional', sa.String(length=80), nullable=False),
    sa.Column('correo_personal', sa.String(), nullable=False),
    sa.Column('telefono_domicilio', sa.String(length=10), nullable=False),
    sa.Column('telefono_movil', sa.String(length=13), nullable=False),
    sa.Column('tipo_sangre', sa.String(length=5), nullable=False),
    sa.Column('lencencia_coduccion', sa.String(length=2), nullable=False),
    sa.ForeignKeyConstraint(['id_discapacidad'], ['discapacidades.id'], ),
    sa.ForeignKeyConstraint(['id_estado_civil'], ['estados_civiles.id'], ),
    sa.ForeignKeyConstraint(['id_etnia'], ['etnias.id'], ),
    sa.ForeignKeyConstraint(['id_nacionalidad'], ['nacionalidades.id'], ),
    sa.ForeignKeyConstraint(['id_pais_origen'], ['paises.id'], ),
    sa.PrimaryKeyConstraint('identificacion'),
    sa.UniqueConstraint('correo_institucional'),
    sa.UniqueConstraint('correo_personal')
    )
    op.create_table('direcciones_domiciliarias',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('id_persona', sa.String(length=10), nullable=False),
    sa.Column('id_provincia', sa.Integer(), nullable=False),
    sa.Column('id_canton', sa.Integer(), nullable=False),
    sa.Column('id_parroquia', sa.String(length=40), nullable=True),
    sa.Column('calle1', sa.String(length=30), nullable=False),
    sa.Column('calle2', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id_canton'], ['cantones.id'], ),
    sa.ForeignKeyConstraint(['id_persona'], ['datos_personales.identificacion'], ),
    sa.ForeignKeyConstraint(['id_provincia'], ['provincias.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_direcciones_domiciliarias_id'), 'direcciones_domiciliarias', ['id'], unique=False)
    op.create_table('expedientes_laborales',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('id_persona', sa.String(length=10), nullable=False),
    sa.Column('registrado_en', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('actualizado_en', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['id_persona'], ['datos_personales.identificacion'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expedientes_laborales_id'), 'expedientes_laborales', ['id'], unique=False)
    op.create_table('detalles_expedientes_laborales',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('id_expediente', postgresql.UUID(), nullable=True),
    sa.Column('tipo_porsonal', sa.Enum('FUNCIONARIIO', 'PROFESOR', name='tipopersonal'), nullable=True),
    sa.Column('id_tipo_documento', postgresql.UUID(), nullable=True),
    sa.Column('motivo_accion', sa.String(length=30), nullable=True),
    sa.Column('numero_documento', sa.String(length=30), nullable=False),
    sa.Column('contrato_relacionado', sa.String(length=30), nullable=False),
    sa.Column('ingreso_concurso', sa.String(length=2), nullable=False),
    sa.Column('id_relacion_ies', postgresql.UUID(), nullable=False),
    sa.Column('id_tipo_escalafon', postgresql.UUID(), nullable=True),
    sa.Column('id_categoria_contrato', postgresql.UUID(), nullable=True),
    sa.Column('id_tiempo_dedicacion', postgresql.UUID(), nullable=True),
    sa.Column('remuneracion_mensual', sa.Numeric(precision=4, scale=2), nullable=False),
    sa.Column('remuneracion_hora', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('fecha_inicio', sa.Date(), nullable=False),
    sa.Column('fecha_fin', sa.Date(), nullable=True),
    sa.Column('id_tipo_funcionario', postgresql.UUID(), nullable=True),
    sa.Column('cargo', sa.String(length=80), nullable=False),
    sa.Column('id_tipo_docente', postgresql.UUID(), nullable=True),
    sa.Column('id_categoria_docente', postgresql.UUID(), nullable=True),
    sa.Column('puesto_jerarquico', sa.String(length=2), nullable=False),
    sa.Column('horas_laborables_semanales', sa.Integer(), nullable=True),
    sa.Column('id_nivel', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['id_categoria_contrato'], ['categorias_contratos_profesores.id'], ),
    sa.ForeignKeyConstraint(['id_categoria_docente'], ['categorias_docentes_losep.id'], ),
    sa.ForeignKeyConstraint(['id_expediente'], ['expedientes_laborales.id'], ),
    sa.ForeignKeyConstraint(['id_nivel'], ['nivel_educativo.id'], ),
    sa.ForeignKeyConstraint(['id_relacion_ies'], ['relaciones_ies.id'], ),
    sa.ForeignKeyConstraint(['id_tiempo_dedicacion'], ['tiempo_dedicacion_profesores.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_docente'], ['tipos_docente_loes.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_documento'], ['tipos_documento.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_escalafon'], ['tipos_escalafones_nombramientos.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_funcionario'], ['tipo_funcionarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detalles_expedientes_laborales_id'), 'detalles_expedientes_laborales', ['id'], unique=False)
    op.drop_index('ix_tipos_relaciones_nombramientos_id', table_name='tipos_relaciones_nombramientos')
    op.drop_table('tipos_relaciones_nombramientos')
    op.create_unique_constraint(None, 'cuentas_usuarios', ['email'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'cuentas_usuarios', type_='unique')
    op.create_table('tipos_relaciones_nombramientos',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('escalafon_nombramiento', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('registrado_en', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('actualizado_en', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tipos_relaciones_nombramientos_pkey'),
    sa.UniqueConstraint('escalafon_nombramiento', name='tipos_relaciones_nombramientos_escalafon_nombramiento_key')
    )
    op.create_index('ix_tipos_relaciones_nombramientos_id', 'tipos_relaciones_nombramientos', ['id'], unique=False)
    op.drop_index(op.f('ix_detalles_expedientes_laborales_id'), table_name='detalles_expedientes_laborales')
    op.drop_table('detalles_expedientes_laborales')
    op.drop_index(op.f('ix_expedientes_laborales_id'), table_name='expedientes_laborales')
    op.drop_table('expedientes_laborales')
    op.drop_index(op.f('ix_direcciones_domiciliarias_id'), table_name='direcciones_domiciliarias')
    op.drop_table('direcciones_domiciliarias')
    op.drop_table('datos_personales')
    op.drop_index(op.f('ix_tipos_escalafones_nombramientos_id'), table_name='tipos_escalafones_nombramientos')
    op.drop_table('tipos_escalafones_nombramientos')
    op.drop_table('estados_civiles')
    # ### end Alembic commands ###
